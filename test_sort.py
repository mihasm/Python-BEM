import numpy as np
from matplotlib import pyplot as plt

mat = np.array([[ 1.00000000e+00, 2.00000000e+00, 3.00000000e+00, 4.00000000e+00,
   5.00000000e+00, 6.00000000e+00, 7.00000000e+00, 9.00000000e+00,
   1.00000000e+01, 1.00000000e+00, 2.00000000e+00, 3.00000000e+00,
   4.00000000e+00, 5.00000000e+00, 6.00000000e+00, 7.00000000e+00,
   8.00000000e+00, 9.00000000e+00, 1.00000000e+01, 1.00000000e+00,
   2.00000000e+00, 3.00000000e+00, 4.00000000e+00, 5.00000000e+00,
   6.00000000e+00, 7.00000000e+00, 8.00000000e+00, 9.00000000e+00,
   1.00000000e+01, 1.00000000e+00, 2.00000000e+00, 3.00000000e+00,
   4.00000000e+00, 5.00000000e+00, 6.00000000e+00, 7.00000000e+00,
   8.00000000e+00, 9.00000000e+00, 1.00000000e+01, 1.00000000e+00,
   2.00000000e+00, 3.00000000e+00, 4.00000000e+00, 5.00000000e+00,
   6.00000000e+00, 7.00000000e+00, 8.00000000e+00, 9.00000000e+00,
   1.00000000e+01, 1.00000000e+00, 2.00000000e+00, 3.00000000e+00,
   4.00000000e+00, 5.00000000e+00, 6.00000000e+00, 7.00000000e+00,
   8.00000000e+00, 9.00000000e+00, 1.00000000e+01, 1.00000000e+00,
   2.00000000e+00, 3.00000000e+00, 4.00000000e+00, 5.00000000e+00,
   6.00000000e+00, 7.00000000e+00, 8.00000000e+00, 9.00000000e+00,
   1.00000000e+01, 1.00000000e+00, 2.00000000e+00, 3.00000000e+00,
   4.00000000e+00, 5.00000000e+00, 6.00000000e+00, 7.00000000e+00,
   8.00000000e+00, 9.00000000e+00, 1.00000000e+01, 1.00000000e+00,
   2.00000000e+00, 3.00000000e+00, 4.00000000e+00, 5.00000000e+00,
   6.00000000e+00, 7.00000000e+00, 8.00000000e+00, 9.00000000e+00,
   1.00000000e+01, 1.00000000e+00, 2.00000000e+00, 3.00000000e+00,
   4.00000000e+00, 5.00000000e+00, 6.00000000e+00, 7.00000000e+00,
   8.00000000e+00, 9.00000000e+00, 1.00000000e+01],
 [ 1.50945375e-02, 5.38542654e-02, 1.49445547e-01, 3.00610237e-01,
   2.70576602e-01, 2.44378809e-01, 1.03773187e-01,-4.48319041e-01,
  -8.18344961e-01, 1.72593883e-02, 6.29292251e-02, 1.74011195e-01,
   3.02163880e-01, 3.44996771e-01, 3.05486552e-01, 1.86727575e-01,
   6.48930369e-03,-2.45360359e-01,-4.97360295e-01, 1.93581842e-02,
   7.22474178e-02, 1.97460172e-01, 2.63407012e-01, 3.96800458e-01,
   3.47117808e-01, 2.52772708e-01, 1.01971470e-01,-4.13489285e-02,
  -2.53938972e-01, 2.13987449e-02, 8.18861119e-02, 2.11332471e-01,
   3.13656586e-01, 4.13564276e-01, 3.72203084e-01, 3.10030963e-01,
   2.22740661e-01, 8.28391748e-02,-6.94624501e-02, 2.33954994e-02,
   9.18037743e-02, 2.16279536e-01, 3.40605699e-01, 3.98600033e-01,
   3.91132108e-01, 3.45804683e-01, 2.86527952e-01, 1.89585191e-01,
   7.04565781e-02, 2.53657991e-02, 1.01932175e-01, 2.22869447e-01,
   3.50573137e-01, 3.73430044e-01, 3.76129191e-01, 3.51159288e-01,
   3.08952264e-01, 2.14487294e-01, 1.08569579e-01, 2.73309795e-02,
   1.11952944e-01, 2.29121354e-01, 3.28340100e-01, 3.42007307e-01,
   3.32190211e-01, 3.00363754e-01, 2.59031897e-01, 1.62064045e-01,
   4.00344614e-02, 2.93185101e-02, 1.17964822e-01, 2.40818134e-01,
   2.94121973e-01, 2.92740419e-01, 2.60022519e-01, 1.96697227e-01,
   1.15402431e-01,-1.96463455e-02,-2.10198850e-01, 3.13612886e-02,
   1.23781887e-01, 2.40484453e-01, 2.57746941e-01, 2.26291223e-01,
   1.50393504e-01, 3.90132025e-02,-1.06406625e-01,-3.26836510e-01,
  -6.26727598e-01, 3.34967029e-02, 1.29820874e-01, 2.25482916e-01,
   2.08041457e-01, 1.37167499e-01, 1.19335434e-02,-1.64342916e-01,
  -4.13508264e-01,-7.69358993e-01,-1.24197465e+00],
 [-1.00000000e+01,-1.00000000e+01,-1.00000000e+01,-1.00000000e+01,
  -1.00000000e+01,-1.00000000e+01,-1.00000000e+01,-1.00000000e+01,
  -1.00000000e+01,-7.77777778e+00,-7.77777778e+00,-7.77777778e+00,
  -7.77777778e+00,-7.77777778e+00,-7.77777778e+00,-7.77777778e+00,
  -7.77777778e+00,-7.77777778e+00,-7.77777778e+00,-5.55555556e+00,
  -5.55555556e+00,-5.55555556e+00,-5.55555556e+00,-5.55555556e+00,
  -5.55555556e+00,-5.55555556e+00,-5.55555556e+00,-5.55555556e+00,
  -5.55555556e+00,-3.33333333e+00,-3.33333333e+00,-3.33333333e+00,
  -3.33333333e+00,-3.33333333e+00,-3.33333333e+00,-3.33333333e+00,
  -3.33333333e+00,-3.33333333e+00,-3.33333333e+00,-1.11111111e+00,
  -1.11111111e+00,-1.11111111e+00,-1.11111111e+00,-1.11111111e+00,
  -1.11111111e+00,-1.11111111e+00,-1.11111111e+00,-1.11111111e+00,
  -1.11111111e+00, 1.11111111e+00, 1.11111111e+00, 1.11111111e+00,
   1.11111111e+00, 1.11111111e+00, 1.11111111e+00, 1.11111111e+00,
   1.11111111e+00, 1.11111111e+00, 1.11111111e+00, 3.33333333e+00,
   3.33333333e+00, 3.33333333e+00, 3.33333333e+00, 3.33333333e+00,
   3.33333333e+00, 3.33333333e+00, 3.33333333e+00, 3.33333333e+00,
   3.33333333e+00, 5.55555556e+00, 5.55555556e+00, 5.55555556e+00,
   5.55555556e+00, 5.55555556e+00, 5.55555556e+00, 5.55555556e+00,
   5.55555556e+00, 5.55555556e+00, 5.55555556e+00, 7.77777778e+00,
   7.77777778e+00, 7.77777778e+00, 7.77777778e+00, 7.77777778e+00,
   7.77777778e+00, 7.77777778e+00, 7.77777778e+00, 7.77777778e+00,
   7.77777778e+00, 1.00000000e+01, 1.00000000e+01, 1.00000000e+01,
   1.00000000e+01, 1.00000000e+01, 1.00000000e+01, 1.00000000e+01,
   1.00000000e+01, 1.00000000e+01, 1.00000000e+01]])

# transpose
mat = mat.transpose()
# sort by multiple columns
r = np.core.records.fromarrays([mat[:,2],mat[:,0]],names='a,b')
mat = mat[r.argsort()]
# split at different column values
dif = np.diff(mat[:,2])
ind_split = np.where(dif!=0)[0]
splitted = np.split(mat,ind_split+1)
